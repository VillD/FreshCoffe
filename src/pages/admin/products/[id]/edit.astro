---
import ProductForm from '@/components/admin/products/ProductForm.astro'
import AdminLayout from '@/layouts/AdminLayout.astro'
import { ProductSchema } from '@/types'

const {id} = Astro.params
const res = await fetch(`${import.meta.env.API_URL}/freshcoffee_products/${id}`)
if(!res.ok) return Astro.redirect('/404')
const data = await res.json()
const product = ProductSchema.parse(data)

---

<AdminLayout title={`Editar producto: ${product.title.rendered}`}>
	<form class='mx-auto max-w-4xl'>
		<ProductForm product={product} />
		<input type="hidden" name="id" value={product.id}/>
		<div class='mt-6 flex items-center justify-end gap-x-6'>
			<button
				type='submit'
				class='rounded-md bg-indigo-600 px-3 py-2 text-sm font-semibold text-white shadow-xs hover:bg-indigo-500 focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600'
				>Guardar Cambios</button
			>
		</div>
	</form>
</AdminLayout>

<script>
import { actions, isInputError } from "astro:actions"
import { navigate } from "astro:transitions/client"
import { toast } from "react-toastify"

  const form = document.querySelector('form')
  if(form){
    form.addEventListener('submit', async (e) => {
      e.preventDefault()
      const form = e.target as HTMLFormElement
      const isVariablePrice = (document.querySelector('#variable_price') as HTMLInputElement).checked

      const formData = new FormData(form)
      formData.append('variable_price', isVariablePrice ? 'true' : 'false')

      const {data, error} = await actions.products.updateProduct(formData)

      console.log([...formData.entries()]);
      
      const inputError = isInputError(error) ? error.issues : []
      console.log();
      
      if(error && inputError.length){
        inputError.forEach(error => toast.error(error.message));
        return 
      }

      if(data && !error){
        toast.success(data.message)
        setTimeout(() => {
          navigate('/admin/products')
        }, 5000);
      }
    })
  }
</script>
